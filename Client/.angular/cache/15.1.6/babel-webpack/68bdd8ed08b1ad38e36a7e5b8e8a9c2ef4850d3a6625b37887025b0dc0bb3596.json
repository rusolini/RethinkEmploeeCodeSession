{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nlet FetchDataComponent = class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.http.get(this.baseUrl + 'emploee/getAll').subscribe(data => {\n      this.data = data;\n    });\n  }\n  addItem() {\n    this.http.post('http://example.com/api/data', this.newItem).subscribe(() => {\n      console.log('Item created successfully');\n      this.loadData(); // Reload the data after adding a new item\n      this.newItem = null; // Clear the newItem object\n    }, error => {\n      console.error('Error creating item:', error);\n    });\n  }\n  editItem(item) {\n    if (this.selectedItem !== item) {\n      this.selectedItem = item;\n    } else {\n      this.selectedItem = null;\n    }\n  }\n  saveItem(item) {\n    this.http.put(this.baseUrl + 'emploee/update', item).subscribe(() => {\n      console.log('Item updated successfully');\n      this.selectedItem = null;\n    }, error => {\n      console.error('Error updating item:', error);\n    });\n  }\n  cancelEdit() {\n    this.selectedItem = null;\n  }\n  deleteItem(item) {\n    // Implement logic to delete an item\n  }\n};\nFetchDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html',\n  styleUrls: ['./fetch-data.component.css']\n}), __param(1, Inject('BASE_URL'))], FetchDataComponent);\nexport { FetchDataComponent };","map":{"version":3,"mappings":";AAAA,SAAQA,SAAS,EAAEC,MAAM,QAAe,eAAe;AAShD,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAI7BC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;EAAW;EAEpFC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IAEN,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,IAAI,CAACH,OAAO,GAAG,gBAAgB,CAAC,CACvDI,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EACN;EAEAC,OAAO;IACL,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAACC,OAAO,CAAC,CACxDJ,SAAS,CAAC,MAAK;MACdK,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,IAAI,CAACR,QAAQ,EAAE,CAAC,CAAC;MACjB,IAAI,CAACM,OAAO,GAAG,IAAI,CAAC,CAAC;IACvB,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;EAEAC,QAAQ,CAACC,IAAc;IACrB,IAAI,IAAI,CAACC,YAAY,KAAKD,IAAI,EAAE;MAC9B,IAAI,CAACC,YAAY,GAAGD,IAAI;KACzB,MAAM;MACL,IAAI,CAACC,YAAY,GAAG,IAAI;;EAE5B;EAEAC,QAAQ,CAACF,IAAc;IACrB,IAAI,CAACd,IAAI,CAACiB,GAAG,CAAC,IAAI,CAAChB,OAAO,GAAG,gBAAgB,EAAEa,IAAI,CAAC,CACjDT,SAAS,CAAC,MAAK;MACdK,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,IAAI,CAACI,YAAY,GAAG,IAAI;IAC1B,CAAC,EAAEH,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;EAEAM,UAAU;IACR,IAAI,CAACH,YAAY,GAAG,IAAI;EAC1B;EAEAI,UAAU,CAACL,IAAS;IAClB;EAAA;CAEH;AAtDYhB,kBAAkB,eAL9BF,SAAS,CAAC;EACRwB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CAC1C,CAAC,EAKuCC,iBAAM,CAAC,UAAU,CAAC,IAJ9CzB,kBAAkB,CAsD9B;SAtDYA,kBAAkB","names":["Component","Inject","FetchDataComponent","constructor","http","baseUrl","ngOnInit","loadData","get","subscribe","data","addItem","post","newItem","console","log","error","editItem","item","selectedItem","saveItem","put","cancelEdit","deleteItem","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["D:\\Projects\\RETHINK\\Emploee\\Client\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Employee} from \"./interface/employee\";\r\n\r\n@Component({\r\n   selector: 'app-fetch-data',\r\n   templateUrl: './fetch-data.component.html',\r\n   styleUrls: ['./fetch-data.component.css']\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  data!: Employee[] | null;\r\n  selectedItem!: Employee | null;\r\n  newItem!: Employee | null;\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {}\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n\r\n    this.http.get<Employee[]>(this.baseUrl + 'emploee/getAll')\r\n      .subscribe(data => {\r\n        this.data = data;\r\n      });\r\n  }\r\n\r\n  addItem() {\r\n    this.http.post('http://example.com/api/data', this.newItem)\r\n      .subscribe(() => {\r\n        console.log('Item created successfully');\r\n        this.loadData(); // Reload the data after adding a new item\r\n        this.newItem = null; // Clear the newItem object\r\n      }, error => {\r\n        console.error('Error creating item:', error);\r\n      });\r\n  }\r\n\r\n  editItem(item: Employee) {\r\n    if (this.selectedItem !== item) {\r\n      this.selectedItem = item;\r\n    } else {\r\n      this.selectedItem = null;\r\n    }\r\n  }\r\n\r\n  saveItem(item: Employee) {\r\n    this.http.put(this.baseUrl + 'emploee/update', item)\r\n      .subscribe(() => {\r\n        console.log('Item updated successfully');\r\n        this.selectedItem = null;\r\n      }, error => {\r\n        console.error('Error updating item:', error);\r\n      });\r\n  }\r\n\r\n  cancelEdit() {\r\n    this.selectedItem = null;\r\n  }\r\n\r\n  deleteItem(item: any) {\r\n    // Implement logic to delete an item\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}