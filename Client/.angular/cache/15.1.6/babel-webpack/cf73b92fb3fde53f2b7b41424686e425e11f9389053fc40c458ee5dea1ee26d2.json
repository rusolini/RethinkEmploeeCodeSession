{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r4.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r4.temperatureC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r4.temperatureF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r4.summary);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, FetchDataComponent_table_5_tr_12_Template, 9, 4, \"tr\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecasts);\n  }\n}\nfunction FetchDataComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tr_20_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editItem(item_r5));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tr_20_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r5 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.deleteItem(item_r5));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r5.email);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.forecasts = [];\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.http.get(this.baseUrl + 'emploee').subscribe(result => {\n      this.forecasts = result;\n    });\n    this.http.get(this.baseUrl + 'emploee').subscribe(data => {\n      this.data = data;\n    });\n    // .subscribe(data => {\n    //   this.data = data;\n    // });\n  }\n\n  addItem() {\n    // Implement logic to add a new item\n  }\n  editItem(item) {\n    // Implement logic to edit an existing item\n  }\n  deleteItem(item) {\n    // Implement logic to delete an item\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 13, 1, \"table\", 2);\n      i0.ɵɵelementStart(6, \"h1\");\n      i0.ɵɵtext(7, \"Data Table\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"table\")(9, \"thead\")(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, FetchDataComponent_tr_20_Template, 12, 3, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_button_click_21_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(22, \"Add Item\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.forecasts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FetchDataComponent","constructor","http","baseUrl","ngOnInit","loadData","get","subscribe","result","forecasts","data","addItem","editItem","item","deleteItem","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\RETHINK\\Emploee\\Client\\src\\app\\fetch-data\\fetch-data.component.html","D:\\Projects\\RETHINK\\Emploee\\Client\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<h1>Data Table</h1>\r\n\r\n<table>\r\n  <thead>\r\n  <tr>\r\n    <th>ID</th>\r\n    <th>Name</th>\r\n    <th>Email</th>\r\n    <th>Actions</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let item of data\">\r\n    <td>{{ item.id }}</td>\r\n    <td>{{ item.name }}</td>\r\n    <td>{{ item.email }}</td>\r\n    <td>\r\n      <button (click)=\"editItem(item)\">Edit</button>\r\n      <button (click)=\"deleteItem(item)\">Delete</button>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<button (click)=\"addItem()\">Add Item</button>\r\n","// import { Component, Inject } from '@angular/core';\r\n// import { HttpClient } from '@angular/common/http';\r\n//\r\n// @Component({\r\n//   selector: 'app-fetch-data',\r\n//   templateUrl: './fetch-data.component.html'\r\n// })\r\n// export class FetchDataComponent {\r\n//   public forecasts: WeatherForecast[] = [];\r\n//\r\n//   constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n//     http.get<WeatherForecast[]>(baseUrl + 'emploee').subscribe(result => {\r\n//       this.forecasts = result;\r\n//     }, error => console.error(error));\r\n//   }\r\n// }\r\n//\r\n// interface WeatherForecast {\r\n//   date: string;\r\n//   temperatureC: number;\r\n//   temperatureF: number;\r\n//   summary: string;\r\n// }\r\nimport {Component, Inject, OnInit} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n   selector: 'app-fetch-data',\r\n   templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  data: any[] | undefined;\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {}\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.http.get<WeatherForecast[]>(this.baseUrl + 'emploee')\r\n      .subscribe(result => {\r\n       this.forecasts = result;\r\n     });\r\n    this.http.get<WeatherForecast[]>(this.baseUrl + 'emploee')\r\n      .subscribe(data => {\r\n        this.data = data;\r\n      });\r\n      // .subscribe(data => {\r\n      //   this.data = data;\r\n      // });\r\n  }\r\n\r\n  addItem() {\r\n    // Implement logic to add a new item\r\n  }\r\n\r\n  editItem(item: any) {\r\n    // Implement logic to edit an existing item\r\n  }\r\n\r\n  deleteItem(item: any) {\r\n    // Implement logic to delete an item\r\n  }\r\n}\r\ninterface WeatherForecast {\r\n   date: string;\r\n   temperatureC: number;\r\n   temperatureF: number;\r\n   summary: string;\r\n }\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}