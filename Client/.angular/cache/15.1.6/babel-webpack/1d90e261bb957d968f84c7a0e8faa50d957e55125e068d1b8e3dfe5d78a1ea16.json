{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tr_14_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editItem(item_r1));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteItem(item_r1));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.email);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  loadData() {\n    this.http.get('http://example.com/api/data').subscribe(data => {\n      this.data = data;\n    });\n  }\n  addItem() {\n    // Implement logic to add a new item\n  }\n  editItem(item) {\n    // Implement logic to edit an existing item\n  }\n  deleteItem(item) {\n    // Implement logic to delete an item\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Data Table\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, FetchDataComponent_tr_14_Template, 12, 3, \"tr\", 0);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FetchDataComponent_Template_button_click_15_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(16, \"Add Item\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAoCEA,0BAA8B;IACxBA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IACMA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,oBAAI;IAAAA,iBAAS;IAC9CA,kCAAmC;IAA3BA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IALhDA,eAAa;IAAbA,gCAAa;IACbA,eAAe;IAAfA,kCAAe;IACfA,eAAgB;IAAhBA,mCAAgB;;;ACTxB,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAe;EAEvCC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,6BAA6B,CAAC,CAChDC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAClB,CAAC,CAAC;EACN;EAEAC,OAAO;IACL;EAAA;EAGFC,QAAQ,CAACC,IAAS;IAChB;EAAA;EAGFC,UAAU,CAACD,IAAS;IAClB;EAAA;;AAzBSV,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDN/BjB,0BAAI;MAAAA,0BAAU;MAAAA,iBAAK;MAEnBA,6BAAO;MAGCA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MACbA,0BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGlBA,8BAAO;MACPA,oEAQK;MACLA,iBAAQ;MAGVA,kCAA4B;MAApBA;QAAA,OAASkB,aAAS;MAAA,EAAC;MAAClB,yBAAQ;MAAAA,iBAAS;;;MAZtBA,gBAAO;MAAPA,kCAAO","names":["i0","FetchDataComponent","constructor","http","ngOnInit","loadData","get","subscribe","data","addItem","editItem","item","deleteItem","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\RETHINK\\Emploee\\Client\\src\\app\\fetch-data\\fetch-data.component.html","D:\\Projects\\RETHINK\\Emploee\\Client\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<!--<h1 id=\"tableLabel\">Weather forecast</h1>-->\r\n\r\n<!--<p>This component demonstrates fetching data from the server.</p>-->\r\n\r\n<!--<p *ngIf=\"!forecasts\"><em>Loading...</em></p>-->\r\n\r\n<!--<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">-->\r\n<!--  <thead>-->\r\n<!--    <tr>-->\r\n<!--      <th>Date</th>-->\r\n<!--      <th>Temp. (C)</th>-->\r\n<!--      <th>Temp. (F)</th>-->\r\n<!--      <th>Summary</th>-->\r\n<!--    </tr>-->\r\n<!--  </thead>-->\r\n<!--  <tbody>-->\r\n<!--    <tr *ngFor=\"let forecast of forecasts\">-->\r\n<!--      <td>{{ forecast.date }}</td>-->\r\n<!--      <td>{{ forecast.temperatureC }}</td>-->\r\n<!--      <td>{{ forecast.temperatureF }}</td>-->\r\n<!--      <td>{{ forecast.summary }}</td>-->\r\n<!--    </tr>-->\r\n<!--  </tbody>-->\r\n<!--</table>-->\r\n<h1>Data Table</h1>\r\n\r\n<table>\r\n  <thead>\r\n  <tr>\r\n    <th>ID</th>\r\n    <th>Name</th>\r\n    <th>Email</th>\r\n    <th>Actions</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let item of data\">\r\n    <td>{{ item.id }}</td>\r\n    <td>{{ item.name }}</td>\r\n    <td>{{ item.email }}</td>\r\n    <td>\r\n      <button (click)=\"editItem(item)\">Edit</button>\r\n      <button (click)=\"deleteItem(item)\">Delete</button>\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<button (click)=\"addItem()\">Add Item</button>\r\n","// import { Component, Inject } from '@angular/core';\r\n// import { HttpClient } from '@angular/common/http';\r\n//\r\n// @Component({\r\n//   selector: 'app-fetch-data',\r\n//   templateUrl: './fetch-data.component.html'\r\n// })\r\n// export class FetchDataComponent {\r\n//   public forecasts: WeatherForecast[] = [];\r\n//\r\n//   constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n//     http.get<WeatherForecast[]>(baseUrl + 'emploee').subscribe(result => {\r\n//       this.forecasts = result;\r\n//     }, error => console.error(error));\r\n//   }\r\n// }\r\n//\r\n// interface WeatherForecast {\r\n//   date: string;\r\n//   temperatureC: number;\r\n//   temperatureF: number;\r\n//   summary: string;\r\n// }\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n   selector: 'app-fetch-data',\r\n   templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent implements OnInit {\r\n  private data: any[] | undefined;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.http.get<any[]>('http://example.com/api/data')\r\n      .subscribe(data => {\r\n        this.data = data;\r\n      });\r\n  }\r\n\r\n  addItem() {\r\n    // Implement logic to add a new item\r\n  }\r\n\r\n  editItem(item: any) {\r\n    // Implement logic to edit an existing item\r\n  }\r\n\r\n  deleteItem(item: any) {\r\n    // Implement logic to delete an item\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}